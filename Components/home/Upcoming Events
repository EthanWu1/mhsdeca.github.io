
import React from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, MapPin, Clock } from "lucide-react";
import { format } from "date-fns";
import { Skeleton } from "@/components/ui/skeleton";

export default function UpcomingEvents({ events, loading }) {
  const categoryColors = {
    meeting: "bg-blue-100 text-blue-800 border-blue-200",
    competition: "bg-purple-100 text-purple-800 border-purple-200",
    workshop: "bg-green-100 text-green-800 border-green-200",
    social: "bg-pink-100 text-pink-800 border-pink-200",
    fundraiser: "bg-orange-100 text-orange-800 border-orange-200"
  };

  if (loading) {
    return (
      <section className="py-20 px-6">
        <div className="max-w-4xl mx-auto">
          <div className="text-center mb-12">
            <Skeleton className="h-12 w-64 mx-auto mb-4 bg-gray-200" />
            <Skeleton className="h-6 w-96 mx-auto bg-gray-200" />
          </div>
          <div className="grid gap-6">
            {[1, 2, 3].map((i) => (
              <Card key={i} className="bg-white border">
                <CardContent className="p-6">
                  <Skeleton className="h-6 w-48 mb-2 bg-gray-200" />
                  <Skeleton className="h-4 w-32 mb-4 bg-gray-200" />
                  <Skeleton className="h-4 w-64 bg-gray-200" />
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>
    );
  }

  return (
    <section className="py-20 px-6">
      <div className="max-w-4xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-12"
        >
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Upcoming Events
          </h2>
          <p className="text-gray-600 text-lg">
            Stay connected with our latest activities and opportunities
          </p>
        </motion.div>

        {events.length === 0 ? (
          <Card className="bg-white border">
            <CardContent className="p-12 text-center">
              <Calendar className="w-12 h-12 text-gray-400 mx-auto mb-4" />
              <h3 className="text-xl text-gray-900 mb-2">No upcoming events</h3>
              <p className="text-gray-500">Check back soon for new events and activities!</p>
            </CardContent>
          </Card>
        ) : (
          <div className="grid gap-6">
            {events.map((event, index) => (
              <motion.div
                key={event.id}
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
              >
                <Card className="bg-white border hover:shadow-lg transition-all duration-300">
                  <CardHeader className="pb-3">
                    <div className="flex flex-col md:flex-row md:items-center justify-between gap-3">
                      <CardTitle className="text-xl text-gray-900">{event.title}</CardTitle>
                      <div className="flex gap-2">
                        <Badge className={categoryColors[event.category] || categoryColors.meeting}>
                          {event.category}
                        </Badge>
                        {event.is_mandatory && (
                          <Badge className="bg-red-100 text-red-800 border-red-200">
                            Mandatory
                          </Badge>
                        )}
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600 mb-4">{event.description}</p>
                    <div className="grid md:grid-cols-3 gap-4 text-sm">
                      <div className="flex items-center gap-2 text-gray-700">
                        <Calendar className="w-4 h-4 text-red-500" />
                        {format(new Date(event.date), "MMMM d, yyyy")}
                      </div>
                      {event.time && (
                        <div className="flex items-center gap-2 text-gray-700">
                          <Clock className="w-4 h-4 text-red-500" />
                          {event.time}
                        </div>
                      )}
                      <div className="flex items-center gap-2 text-gray-700">
                        <MapPin className="w-4 h-4 text-red-500" />
                        {event.location}
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        )}
      </div>
    </section>
  );
}
